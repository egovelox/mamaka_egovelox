version: 2.1

orbs:
  node: circleci/node@4.1.0

jobs:
  building_boiler:
    executor: node/default
    # docker:
    #   - image: circleci/node@4.1.0
    #     auth:
    #       username: mydockerhub-user
    #       password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      # - node/install-packages:
      #     app-dir: boiler
      #     with-cache: true
      #     override-ci-command: npm install
      - run: |
          cd boiler
          npm install
      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "boiler/package-lock.json" }}
      - run: |
          cd boiler
          npm run build
          ls
      - save_cache:
          paths:
            - node_modules
          key: v1-npm-deps-{{ checksum "boiler/package-lock.json" }}

      - persist_to_workspace:
          root: boiler/dist
          paths:
            - .

  building_image:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - attach_workspace:
          at: boiler/dist
      - run: |
          cd nginx
          mkdir dist
          cp ~/project/boiler/dist/* dist
          docker build . -t 9420077500/mamaka-webpage
          echo $DOCKER_PASSWD | docker login -u $DOCKER_USER --password-stdin
          docker push 9420077500/mamaka-webpage
    
  deploy_to_gke:
    docker:
      - image: google/cloud-sdk@sha256:126a49cfa2aa6e20d561fa14999bf657bc341efeba04939bd2f612bf843d12a6
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          cd k8s
          echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > gcloud-service-key.json
          set -x
          gcloud auth activate-service-account --key-file gcloud-service-key.json
          gcloud --quiet config set project $GOOGLE_PROJECT_ID
          gcloud --quiet config set compute/zone $GOOGLE_COMPUTE_ZONE
          EXISTING_CLUSTER=$(gcloud container clusters list --format="value(name)" --filter="name=$GOOGLE_CLUSTER_NAME")
            if [ "${EXISTING_CLUSTER}" != $GOOGLE_CLUSTER_NAME ]
            then
              # Create cluster if it doesn't already exist
              gcloud --quiet container clusters create $GOOGLE_CLUSTER_NAME --num-nodes=1
              kubectl apply -f ./k8s-mamaka-depl.yaml && kubectl apply -f ./k8s-mamaka-lb-service.yaml
            else
              gcloud --quiet container clusters get-credentials $GOOGLE_CLUSTER_NAME
              kubectl rollout restart deployment mamaka-depl
            fi
          kubectl get pods
          



workflows:
  version: 2.1
  buildCode_buildImage:
    jobs:
      - building_boiler
      - building_image:
          requires:
            - building_boiler
      - deploy_to_gke:
          requires:
            - building_image

